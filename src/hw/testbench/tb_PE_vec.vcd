$date
	Sat Aug 26 16:31:44 2023
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module tb_PE_vec $end
$var wire 32 ! psum [31:0] $end
$var reg 16 " PE1_ifmap [15:0] $end
$var reg 16 # PE1_weight [15:0] $end
$var reg 16 $ PE2_ifmap [15:0] $end
$var reg 16 % PE2_weight [15:0] $end
$var reg 16 & PE3_ifmap [15:0] $end
$var reg 16 ' PE3_weight [15:0] $end
$var reg 1 ( clk $end
$var reg 1 ) ifmap_wen $end
$var reg 1 * rst $end
$var reg 1 + weight_wen $end
$scope module pe_vec $end
$var wire 16 , PE1_ifmap [15:0] $end
$var wire 16 - PE1_weight [15:0] $end
$var wire 16 . PE2_ifmap [15:0] $end
$var wire 16 / PE2_weight [15:0] $end
$var wire 16 0 PE3_ifmap [15:0] $end
$var wire 16 1 PE3_weight [15:0] $end
$var wire 1 ( clk $end
$var wire 1 ) ifmap_wen $end
$var wire 1 * rst $end
$var wire 1 + weight_wen $end
$var wire 32 2 psum [31:0] $end
$var wire 32 3 PE3_psum [31:0] $end
$var wire 32 4 PE2_psum [31:0] $end
$var wire 32 5 PE1_psum [31:0] $end
$scope module pe1 $end
$var wire 1 ( clk $end
$var wire 16 6 ifmap [15:0] $end
$var wire 1 ) ifmap_wen $end
$var wire 1 * rst $end
$var wire 16 7 weight [15:0] $end
$var wire 1 + weight_wen $end
$var wire 32 8 psum [31:0] $end
$var integer 32 9 i1 [31:0] $end
$upscope $end
$scope module pe2 $end
$var wire 1 ( clk $end
$var wire 16 : ifmap [15:0] $end
$var wire 1 ) ifmap_wen $end
$var wire 1 * rst $end
$var wire 16 ; weight [15:0] $end
$var wire 1 + weight_wen $end
$var wire 32 < psum [31:0] $end
$var integer 32 = i1 [31:0] $end
$upscope $end
$scope module pe3 $end
$var wire 1 ( clk $end
$var wire 16 > ifmap [15:0] $end
$var wire 1 ) ifmap_wen $end
$var wire 1 * rst $end
$var wire 16 ? weight [15:0] $end
$var wire 1 + weight_wen $end
$var wire 32 @ psum [31:0] $end
$var integer 32 A i1 [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
x+
x*
x)
1(
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#500
0(
#1000
b0 !
b0 2
b0 3
b0 @
b0 4
b0 <
b0 5
b0 8
b11 A
b11 =
b11 9
1(
1*
#1500
0(
#2000
1(
0*
#2500
0(
#3000
1(
0+
0)
#3500
0(
#4000
1(
b1111111111111001 '
b1111111111111001 1
b1111111111111001 ?
b111 &
b111 0
b111 >
b1001 %
b1001 /
b1001 ;
b10 $
b10 .
b10 :
b1111111111111111 #
b1111111111111111 -
b1111111111111111 7
b1 "
b1 ,
b1 6
#4500
0(
#5000
b11111111111111111111111111001111 3
b11111111111111111111111111001111 @
b10010 4
b10010 <
b11111111111111111111111111100000 !
b11111111111111111111111111100000 2
b11111111111111111111111111111111 5
b11111111111111111111111111111111 8
1(
1+
1)
#5500
0(
#6000
1(
0+
0)
#6500
0(
#7000
1(
b1011 '
b1011 1
b1011 ?
b1000 &
b1000 0
b1000 >
b10 %
b10 /
b10 ;
b100 $
b100 .
b100 :
b0 #
b0 -
b0 7
b101 "
b101 ,
b101 6
#7500
0(
#8000
b11111111111111111111111111111111 5
b11111111111111111111111111111111 8
b11010 4
b11010 <
b1000000 !
b1000000 2
b100111 3
b100111 @
1(
1+
1)
#8500
0(
#9000
1(
0+
0)
#9500
0(
#10000
1(
b110 '
b110 1
b110 ?
b1001 &
b1001 0
b1001 >
b1111111111111100 %
b1111111111111100 /
b1111111111111100 ;
b110 $
b110 .
b110 :
b11 #
b11 -
b11 7
b11 "
b11 ,
b11 6
#10500
0(
#11000
b1011101 3
b1011101 @
b10 4
b10 <
b1100111 !
b1100111 2
b1000 5
b1000 8
1(
1+
1)
#11500
0(
#12000
1(
0+
0)
#12500
0(
#13000
1(
b111 &
b111 0
b111 >
b1000 $
b1000 .
b1000 :
b10 "
b10 ,
b10 6
#13500
0(
#14000
b1 5
b1 8
b10000 4
b10000 <
b1100110 !
b1100110 2
b1010101 3
b1010101 @
1(
1)
#14500
0(
#15000
1(
0)
#15500
0(
#16000
1(
b1000 &
b1000 0
b1000 >
b1001 $
b1001 .
b1001 :
b100 "
b100 ,
b100 6
#16500
0(
#17000
b111110 3
b111110 @
b100010 4
b100010 <
b1101001 !
b1101001 2
b1001 5
b1001 8
1(
1)
#17500
0(
#18000
1(
0)
#18500
0(
#19000
1(
b1001 &
b1001 0
b1001 >
b1 $
b1 .
b1 :
b11 "
b11 ,
b11 6
#19500
0(
#20000
b111 5
b111 8
b1010110 4
b1010110 <
b10111010 !
b10111010 2
b1011101 3
b1011101 @
1(
1)
#20500
0(
#21000
1(
0)
#21500
0(
#22000
1(
b1010 &
b1010 0
b1010 >
b11 $
b11 .
b11 :
b101 "
b101 ,
b101 6
#22500
0(
#23000
b1100111 3
b1100111 @
b1000111 4
b1000111 <
b10111001 !
b10111001 2
b1011 5
b1011 8
1(
1)
#23500
0(
#24000
1(
0)
#24500
0(
#25000
1(
b1 &
b1 0
b1 >
b100 $
b100 .
b100 :
b110 "
b110 ,
b110 6
#25500
0(
#26000
b1111 5
b1111 8
b11111111111111111111111111111111 4
b11111111111111111111111111111111 <
b1000011 !
b1000011 2
b110101 3
b110101 @
1(
1)
#26500
0(
#27000
1(
0)
#27500
0(
#28000
1(
b10 &
b10 0
b10 >
b101 $
b101 .
b101 :
b111 "
b111 ,
b111 6
#28500
0(
#29000
b11111111111111111111111111010001 3
b11111111111111111111111111010001 @
b1111 4
b1111 <
b11111111111111111111111111110000 !
b11111111111111111111111111110000 2
b10000 5
b10000 8
1(
1)
#29500
0(
#30000
1(
0)
#30500
0(
#31000
1(
b11 &
b11 0
b11 >
b110 $
b110 .
b110 :
b1111 "
b1111 ,
b1111 6
#31500
0(
#32000
b100111 5
b100111 8
b10110 4
b10110 <
b1011110 !
b1011110 2
b100001 3
b100001 @
1(
1)
#32500
0(
#33000
1(
0)
